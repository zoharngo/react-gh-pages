{"version":3,"sources":["store/restaurant-context.js","components/enhanced-table/table-model.jsx","components/enhanced-table/table-head/table-head.jsx","components/enhanced-table/helpers/sorts.js","components/enhanced-table/enhanced-table-toolbar/enhanced-table-toolbar.jsx","components/enhanced-table/enhanced-table.jsx","components/restaurant-grid/restaurant-grid.jsx","store/restuarant-reducer.js","store/restaurant-provider.jsx","components/leadgen/leadgen.jsx","App.js","reportWebVitals.js","index.js"],"names":["RestaurantContext","React","createContext","ordersQueue","tables","updateTableStatus","deleteOrder","id","updateOrder","order","headCells","label","EnhancedTableHead","props","onSelectAllClick","orderBy","numSelected","rowCount","onRequestSort","TableHead","sx","background","height","TableRow","TableCell","padding","Checkbox","color","indeterminate","checked","onChange","inputProps","map","headCell","index","align","sortDirection","TableSortLabel","fontSize","active","direction","onClick","property","event","Box","component","visuallyHidden","descendingComparator","a","b","getComparator","stableSort","array","comparator","stabilizedThis","el","sort","EnhancedTableToolbar","Toolbar","pl","sm","pr","xs","bgcolor","theme","alpha","palette","primary","main","action","activatedOpacity","Typography","flex","variant","Tooltip","title","IconButton","EnhancedTable","useContext","rows","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","max","length","width","Paper","mb","TableContainer","Table","size","target","newSelecteds","n","_event","TableBody","slice","row","isItemSelected","indexOf","labelId","tableId","find","t","orderId","hover","preventDefault","stopPropagation","selectedIndex","newSelected","concat","handleClick","role","tabIndex","mobile","diners","TextField","select","value","e","filter","MenuItem","style","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","Item","styled","typography","body1","textAlign","borderRadius","boxSizing","RestaurantGrid","anchorEl","setAnchorEl","currentTarget","handleClose","open","Boolean","idPopover","undefined","Grid","container","rowSpacing","columnSpacing","md","_index","item","elevation","fontWeight","Popover","onClose","anchorOrigin","vertical","horizontal","List","ListItem","disablePadding","ListItemButton","ListItemIcon","ListItemText","DELETE_ORDER","UPDATE_ORDER","UPDATE_TABLE_STATUS","restaurantReducer","state","payload","type","RestaurantProvider","useReducer","restaurantState","dispatch","Provider","setTimeout","children","Leadgen","availableTables","useMemo","takenTables","console","log","display","flexDirection","alignItems","m","lineHeight","ColorModeContext","toggleColorMode","App","useTheme","colorMode","justifyContent","p","mode","ml","marginRight","marginLeft","numberOfTables","AppContextWrapper","setMode","prevMode","createTheme","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.1b3965af.chunk.js","sourcesContent":["import React from 'react';\n\nconst RestaurantContext = React.createContext({\n  ordersQueue: [],\n  tables: [],\n  updateTableStatus: () => {},\n  deleteOrder: (id) => {},\n  updateOrder: (order) => {},\n});\n\nexport default RestaurantContext;\n","const headCells = [\n  {\n    id: 'id',\n    label: 'GUEST ID',\n  },\n  {\n    id: 'mobile',\n    label: 'MOBILE',\n  },\n  {\n    id: 'diners',\n    label: 'NUMBER OF DINNERS',\n  },\n  {\n    id: 'tableId',\n    label: 'TABLE NUMBER',\n  }\n];\n\nexport { headCells };\n","import TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport TableCell from '@mui/material/TableCell';\nimport { visuallyHidden } from '@mui/utils';\nimport Box from '@mui/material/Box';\n\nimport PropTypes from 'prop-types';\nimport { headCells } from '../table-model';\n\nfunction EnhancedTableHead(props) {\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead sx={{ background: 'darkGray', height: '30px' }}>\n      <TableRow>\n        <TableCell padding='checkbox'>\n          <Checkbox\n            color='primary'\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              'aria-label': 'select all desserts',\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell, index) => (\n          <TableCell\n            key={headCell.id}\n            align='center'\n            padding={'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              sx={{ fontSize: '1.5vh' }}\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component='span' sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;\n","function descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport { getComparator, stableSort };\n","import PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport BackspaceOutlinedIcon from '@mui/icons-material/BackspaceOutlined';\nimport FilterListIcon from '@mui/icons-material/FilterList';\n\nfunction EnhancedTableToolbar({ numSelected }) {\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) => alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\n        }),\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography sx={{ flex: '1 1 100%' }} color='inherit' variant='subtitle1' component='div'>\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography sx={{ flex: '1 1 100%' }} variant='h6' id='tableTitle' component='div'>\n          Orders\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <>\n          <Tooltip title='Confirm'>\n            <IconButton>\n              <ThumbUpIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title='Clear'>\n            <IconButton>\n              <BackspaceOutlinedIcon />\n            </IconButton>\n          </Tooltip>\n        </>\n      ) : (\n        <Tooltip title='Filter list'>\n          <IconButton>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableToolbar;\n","import { useState, useContext } from 'react';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Checkbox from '@mui/material/Checkbox';\nimport RestaurantContext from '../../store/restaurant-context';\nimport EnhancedTableHead from './table-head/table-head';\nimport { getComparator, stableSort } from './helpers/sorts';\nimport EnhancedTableToolbar from './enhanced-table-toolbar/enhanced-table-toolbar';\nimport { MenuItem, TextField, Typography } from '@mui/material';\n\nexport default function EnhancedTable() {\n  const { ordersQueue: rows = [], tables = [], updateTableStatus } = useContext(RestaurantContext);\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('id');\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (_event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, id) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (id) => selected.indexOf(id) !== -1;\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Paper sx={{ width: '100%', mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table aria-labelledby='tableTitle' size={'small'}>\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  const tableId = tables.find((t) => t.orderId === row.id)?.id;\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.id)}\n                      role='checkbox'\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.id}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding='checkbox'>\n                        <Checkbox\n                          color='primary'\n                          checked={isItemSelected}\n                          inputProps={{\n                            'aria-labelledby': labelId,\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell align='center' component='th' id={labelId}>\n                        {row.id}\n                      </TableCell>\n                      <TableCell align='center'>{row.mobile}</TableCell>\n                      <TableCell align='center'>{row.diners}</TableCell>\n                      {tableId ? (\n                        <TableCell align='center'>{tableId}</TableCell>\n                      ) : (\n                        <TableCell padding='normal' align='center'>\n                          <TextField\n                            sx={{ padding: '0', width: '100%' }}\n                            id='outlined-select-table'\n                            select\n                            label='Table ID'\n                            value={-1}\n                            onChange={(e) => {\n                              e.stopPropagation();\n                              e.preventDefault();\n                              updateTableStatus(e.target.value, row.id);\n                            }}\n                            size='small'\n                          >\n                            {tables\n                              .filter((t) => !t.orderId && t.size === row.diners)\n                              .map((t) => (\n                                <MenuItem key={t.id} value={t.id}>\n                                  <Typography sx={{ fontSize: '1.6vh' }}>\n                                    Table ID {t.id}/{t.size}\n                                  </Typography>\n                                </MenuItem>\n                              ))}\n                          </TextField>\n                        </TableCell>\n                      )}\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: 33 * emptyRows,\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component='div'\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </Box>\n  );\n}\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport RestaurantContext from '../../store/restaurant-context';\nimport { List, ListItem, ListItemText, Popover, ListItemButton, ListItemIcon, Typography } from '@mui/material';\nimport ClearIcon from '@mui/icons-material/Clear';\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body1,\n  textAlign: 'center',\n  color: 'white',\n  height: '10vh',\n  fontSize: '1.3vh',\n  borderRadius: '30px',\n  boxSizing: 'border-box',\n}));\n\nexport default function RestaurantGrid() {\n  const { tables = [] } = React.useContext(RestaurantContext);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const idPopover = open ? 'simple-popover' : undefined;\n  return (\n    <Grid container rowSpacing={3} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n      {tables.map(({ id, size, orderId }, _index) => {\n        return (\n          <Grid item xs={size + 1} key={id}>\n            <Paper sx={{ background: 'brown' }} elevation={24}>\n              <Item onClick={handleClick} sx={{ background: `${orderId || orderId === 0 ? 'red' : 'green'}` }}>\n                <Typography>ID:{id}</Typography>\n                <Typography sx={{ fontSize: '1.7vh', fontWeight: 500 }}>SIZE:{size}</Typography>\n                {(orderId || orderId === 0) && (\n                  <Typography sx={{ fontSize: '1.7vh', fontWeight: 500 }}>ORDER ID:{orderId}</Typography>\n                )}\n              </Item>\n            </Paper>\n            <Popover\n              elevation={0}\n              id={idPopover}\n              open={open}\n              anchorEl={anchorEl}\n              onClose={handleClose}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n            >\n              <List>\n                <ListItem disablePadding>\n                  <ListItemButton>\n                    <ListItemIcon>\n                      <ClearIcon />\n                    </ListItemIcon>\n                    <ListItemText primary='Release table' />\n                  </ListItemButton>\n                </ListItem>\n              </List>\n            </Popover>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n}\n","export const DELETE_ORDER = 'DELETE_ORDER';\nexport const UPDATE_ORDER = 'UPDATE_ORDER';\nexport const UPDATE_TABLE_STATUS = 'UPDATE_TABLE_STATUS';\n\nconst updateOrder = (payload, state) => {};\n\nconst removeOrder = (payload, state) => {};\n\nconst updateTableStatus = (payload, state) => {\n  return {\n    ...state,\n    tables: state.tables.map((t) => {\n      return payload.tableId === t.id\n        ? {\n            ...t,\n            orderId: payload.orderId,\n          }\n        : t;\n    }),\n  };\n};\n\nexport const restaurantReducer = (state, payload) => {\n  switch (payload.type) {\n    case DELETE_ORDER:\n      return updateOrder(payload, state);\n    case UPDATE_ORDER:\n      return removeOrder(payload, state);\n    case UPDATE_TABLE_STATUS:\n      return updateTableStatus(payload, state);\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from 'react';\nimport ordersQueue from './data/orders.json';\nimport tables from './data/tables.json';\n\nimport RestaurantContext from './restaurant-context';\nimport { restaurantReducer, DELETE_ORDER, UPDATE_ORDER, UPDATE_TABLE_STATUS } from './restuarant-reducer';\n\nconst RestaurantProvider = (props) => {\n  const [restaurantState, dispatch] = useReducer(restaurantReducer, {\n    ordersQueue,\n    tables,\n  });\n\n  const updateTableStatus = (tableId, orderId) => {\n    dispatch({ type: UPDATE_TABLE_STATUS, tableId, orderId });\n  };\n\n  const deleteOrder = (orderId) => {\n    setTimeout(() => {\n      dispatch({ type: DELETE_ORDER, orderId });\n    }, 700);\n  };\n\n  const updateOrder = (order) => {\n    setTimeout(() => {\n      dispatch({ type: UPDATE_ORDER, order });\n    }, 700);\n  };\n\n  return (\n    <RestaurantContext.Provider\n      value={{\n        updateTableStatus,\n        deleteOrder,\n        updateOrder,\n        ...restaurantState,\n      }}\n    >\n      {props.children}\n    </RestaurantContext.Provider>\n  );\n};\n\nexport default RestaurantProvider;\n","import React, { useMemo, useContext } from 'react';\nimport Box from '@mui/material/Box';\nimport { Typography } from '@mui/material';\nimport RestaurantContext from '../../store/restaurant-context';\n\nconst Leadgen = () => {\n  const { tables = [] } = useContext(RestaurantContext);\n  const availableTables = useMemo(() => tables.filter((t) => t.orderId === false).length, [tables]);\n  const takenTables = useMemo(() => tables.length - availableTables, [availableTables, tables]);\n  console.log('availableTables', availableTables);\n  return (\n    <Box padding={0} sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }} component='div'>\n      <Box m={1}>\n        <Typography sx={{ color: 'green', fontWeight: 700, lineHeight: '3vh', fontSize: '2vh' }}>\n          AVAILABLE TABLES: ({availableTables})\n        </Typography>\n      </Box>\n      <Box m={1}>\n        <Typography sx={{ color: 'red', fontWeight: 700, lineHeight: '3vh', fontSize: '2vh' }}>TAKEN TABLES: ({takenTables})</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Leadgen;\n","import { createContext, useContext, useState, useMemo } from 'react';\nimport { useTheme, ThemeProvider, createTheme } from '@mui/material/styles';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport { IconButton, Paper } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport EnhancedTable from './components/enhanced-table/enhanced-table';\nimport RestaurantGrid from './components/restaurant-grid/restaurant-grid';\nimport RestaurantProvider from './store/restaurant-provider';\nimport Leadgen from './components/leadgen/leadgen';\n\nconst ColorModeContext = createContext({ toggleColorMode: () => {} });\n\nfunction App() {\n  const theme = useTheme();\n  const colorMode = useContext(ColorModeContext);\n\n  return (\n    <RestaurantProvider>\n      <Box sx={{ width: '100vw', height: '100vh' }}>\n        <Box\n          sx={{\n            display: 'flex',\n            width: '100%',\n            alignItems: 'center',\n            justifyContent: 'flex-start',\n            bgcolor: 'background.default',\n            color: 'text.primary',\n            p: 3,\n          }}\n        >\n          {theme.palette.mode} mode\n          <IconButton sx={{ ml: 1 }} onClick={colorMode.toggleColorMode} color='inherit'>\n            {theme.palette.mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n          </IconButton>\n        </Box>\n        <Box\n          component='div'\n          sx={{\n            bgcolor: 'background.default',\n            flexDirection: 'row',\n            display: 'flex',\n            padding: '50px',\n            boxSizing: 'border-box',\n          }}\n        >\n          <Box component='div' sx={{ flex: 4, boxSizing: 'border-box', height: 'fit-content' }}>\n            <EnhancedTable />\n          </Box>\n          <Paper\n            elevation={3}\n            component='div'\n            sx={{\n              padding: '10px',\n              flex: 3,\n              boxSizing: 'border-box',\n              marginRight: '5vw',\n              marginLeft: '5vw',\n            }}\n          >\n            <RestaurantGrid numberOfTables={17} />\n          </Paper>\n          <Paper elevation={3} component='div' sx={{ flex: 2, boxSizing: 'border-box', height: 'fit-content' }}>\n            <Leadgen />\n          </Paper>\n        </Box>\n      </Box>\n    </RestaurantProvider>\n  );\n}\n\nfunction AppContextWrapper() {\n  const [mode, setMode] = useState('light');\n  const colorMode = useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n      },\n    }),\n    []\n  );\n\n  const theme = useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n        },\n      }),\n    [mode]\n  );\n\n  return (\n    <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </ColorModeContext.Provider>\n  );\n}\n\nexport default AppContextWrapper;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CssBaseline } from '@mui/material';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}