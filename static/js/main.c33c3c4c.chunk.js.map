{"version":3,"sources":["store/restaurant-context.js","components/enhanced-table/table-model.jsx","components/enhanced-table/table-head/table-head.jsx","components/enhanced-table/helpers/sorts.js","components/enhanced-table/enhanced-table-toolbar/enhanced-table-toolbar.jsx","components/enhanced-table/enhanced-table.jsx","components/restaurant-grid/restaurant-grid.jsx","store/restuarant-reducer.js","store/restaurant-provider.jsx","components/leadgen/leadgen.jsx","App.js","reportWebVitals.js","index.js"],"names":["RestaurantContext","React","createContext","ordersQueue","tables","updateTableStatus","deleteOrder","updateOrder","addOrder","headCells","id","label","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","sx","background","height","TableRow","TableCell","padding","Checkbox","color","indeterminate","checked","onChange","inputProps","map","headCell","index","align","sortDirection","TableSortLabel","fontSize","active","direction","onClick","property","event","Box","component","visuallyHidden","descendingComparator","a","b","getComparator","stableSort","array","comparator","stabilizedThis","el","sort","EnhancedTableToolbar","addNewOrder","toggleEditMode","removeSelected","useState","editMode","setEditMode","Toolbar","pl","sm","pr","xs","bgcolor","theme","alpha","palette","primary","main","action","activatedOpacity","Typography","flex","variant","Tooltip","title","IconButton","EnhancedTable","useContext","rows","lastRowsLength","setLastRowsLength","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","allowEdit","useEffect","length","Math","floor","onFieldChange","rowId","value","field","Number","emptyRows","max","width","Paper","mb","mobile","diners","filter","_","includes","row","tableId","TableContainer","Table","size","target","newSelecteds","n","_event","TableBody","slice","isItemSelected","indexOf","labelId","startTime","endTime","hover","preventDefault","stopPropagation","type","selectedIndex","newSelected","concat","handleClick","role","tabIndex","TextField","disabled","e","Select","renderValue","MenuItem","t","orderId","TimePicker","renderInput","params","style","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","Item","styled","typography","body1","textAlign","borderRadius","boxSizing","RestaurantGrid","anchorEl","setAnchorEl","setTableId","setOrderId","handleClose","releaseTable","open","Boolean","idPopover","undefined","Grid","p","container","rowSpacing","columnSpacing","md","_index","item","elevation","currentTarget","fontWeight","Popover","onClose","anchorOrigin","vertical","horizontal","List","ListItem","disablePadding","ListItemButton","ListItemIcon","ListItemText","DELETE_ORDER","UPDATE_ORDER","UPDATE_TABLE_STATUS","ADD_NEW_ORDER","restaurantReducer","state","payload","o","orderIds","console","log","Array","isArray","RestaurantProvider","useReducer","restaurantState","dispatch","Provider","children","Leadgen","availableTables","useMemo","takenTables","display","flexDirection","alignItems","m","lineHeight","ColorModeContext","toggleColorMode","App","useTheme","colorMode","justifyContent","mode","ml","numberOfTables","AppContextWrapper","setMode","prevMode","createTheme","ThemeProvider","LocalizationProvider","dateAdapter","AdapterDateFns","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.c33c3c4c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst RestaurantContext = React.createContext({\r\n  ordersQueue: [],\r\n  tables: [],\r\n  updateTableStatus: () => {},\r\n  deleteOrder: () => {},\r\n  updateOrder: () => {},\r\n  addOrder: () => {},\r\n\r\n});\r\n\r\nexport default RestaurantContext;\r\n","const headCells = [\r\n  {\r\n    id: 'id',\r\n    label: 'GUEST ID',\r\n  },\r\n  {\r\n    id: 'mobile',\r\n    label: 'MOBILE',\r\n  },\r\n  {\r\n    id: 'diners',\r\n    label: 'NUMBER OF DINNERS',\r\n  },\r\n  {\r\n    id: 'tableId',\r\n    label: 'TABLE NUMBER',\r\n  },\r\n  {\r\n    id: 'startTime',\r\n    label: 'START TIME',\r\n  },\r\n  {\r\n    id: 'endTime',\r\n    label: 'END TIME',\r\n  }\r\n];\r\n\r\nexport { headCells };\r\n","import TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport TableCell from '@mui/material/TableCell';\nimport { visuallyHidden } from '@mui/utils';\nimport Box from '@mui/material/Box';\n\nimport PropTypes from 'prop-types';\nimport { headCells } from '../table-model';\n\nfunction EnhancedTableHead(props) {\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead sx={{ background: 'darkGray', height: '30px' }}>\n      <TableRow>\n        <TableCell padding='checkbox'>\n          <Checkbox\n            color='primary'\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              'aria-label': 'select all desserts',\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell, index) => (\n          <TableCell\n            key={headCell.id}\n            align='center'\n            padding={'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              sx={{ fontSize: '1.5vh' }}\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component='span' sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;\n","function descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport { getComparator, stableSort };\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport CheckIcon from '@mui/icons-material/Check';\nfunction EnhancedTableToolbar({ numSelected, addNewOrder, toggleEditMode, removeSelected }) {\n  const [editMode, setEditMode] = useState(false);\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) => alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\n        }),\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography sx={{ flex: '1 1 100%' }} color='inherit' variant='subtitle1' component='div'>\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography sx={{ flex: '1 1 100%' }} variant='h6' id='tableTitle' component='div'>\n          Orders\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title='Remove orders'>\n          <IconButton onClick={removeSelected}>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <>\n          {!editMode ? (\n            <Tooltip title='Edit'>\n              <IconButton\n                onClick={() => {\n                  toggleEditMode(true);\n                  setEditMode(true);\n                }}\n              >\n                <EditIcon />\n              </IconButton>\n            </Tooltip>\n          ) : (\n            <Tooltip title='Check changes'>\n              <IconButton\n                onClick={() => {\n                  toggleEditMode(false);\n                  setEditMode(false);\n                }}\n              >\n                <CheckIcon />\n              </IconButton>\n            </Tooltip>\n          )}\n          <Tooltip title='Add new order'>\n            <IconButton\n              onClick={() => {\n                addNewOrder();\n                toggleEditMode(true);\n                setEditMode(true);\n              }}\n            >\n              <AddIcon />\n            </IconButton>\n          </Tooltip>\n        </>\n      )}\n    </Toolbar>\n  );\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  addNewOrder: PropTypes.func,\n  toggleEditMode: PropTypes.func,\n  removeSelected: PropTypes.func,\n};\n\nexport default EnhancedTableToolbar;\n","import { useState, useContext, useEffect } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport RestaurantContext from '../../store/restaurant-context';\r\nimport EnhancedTableHead from './table-head/table-head';\r\nimport { getComparator, stableSort } from './helpers/sorts';\r\nimport EnhancedTableToolbar from './enhanced-table-toolbar/enhanced-table-toolbar';\r\nimport { MenuItem, Select, TextField } from '@mui/material';\r\nimport { TimePicker } from '@mui/lab';\r\n\r\nexport default function EnhancedTable() {\r\n  const {\r\n    ordersQueue: rows = [],\r\n    tables = [],\r\n    addOrder,\r\n    updateTableStatus,\r\n    updateOrder,\r\n    deleteOrder,\r\n  } = useContext(RestaurantContext);\r\n  const [lastRowsLength, setLastRowsLength] = useState(0);\r\n  const [order, setOrder] = useState('asc');\r\n  const [orderBy, setOrderBy] = useState('id');\r\n  const [selected, setSelected] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [allowEdit, toggleEditMode] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (lastRowsLength && rows.length > lastRowsLength) {\r\n      setPage(\r\n        rows.length % rowsPerPage > 0\r\n          ? Math.floor(rows.length / rowsPerPage)\r\n          : Math.floor(rows.length / rowsPerPage) - 1\r\n      );\r\n    }\r\n  }, [lastRowsLength, rows.length, rowsPerPage]);\r\n\r\n  const handleRequestSort = (_event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    if (event.target.type === 'checkbox') {\r\n      const selectedIndex = selected.indexOf(id);\r\n      let newSelected = [];\r\n\r\n      if (selectedIndex === -1) {\r\n        newSelected = newSelected.concat(selected, id);\r\n      } else if (selectedIndex === 0) {\r\n        newSelected = newSelected.concat(selected.slice(1));\r\n      } else if (selectedIndex === selected.length - 1) {\r\n        newSelected = newSelected.concat(selected.slice(0, -1));\r\n      } else if (selectedIndex > 0) {\r\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n      }\r\n\r\n      setSelected(newSelected);\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (_event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const onFieldChange = (rowId, value, field) => {\r\n    updateOrder({\r\n      id: Number(rowId),\r\n      [field]: value,\r\n    });\r\n  };\r\n\r\n  const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n  const addNewOrder = () => {\r\n    addOrder({\r\n      id: rows.length,\r\n      mobile: '',\r\n      diners: '',\r\n    });\r\n    setLastRowsLength(rows.length);\r\n  };\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Paper sx={{ width: '100%', mb: 2 }}>\r\n        <EnhancedTableToolbar\r\n          toggleEditMode={(value) => toggleEditMode(!value)}\r\n          addNewOrder={addNewOrder}\r\n          numSelected={selected.length}\r\n          removeSelected={() => {\r\n            deleteOrder(selected);\r\n            setSelected([]);\r\n            updateTableStatus(rows.filter((_, index) => selected.includes(index)).map((row) => row.tableId));\r\n          }}\r\n        />\r\n        <TableContainer>\r\n          <Table aria-labelledby='tableTitle' size={'small'}>\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n                  const { startTime = null, endTime = null, tableId = '' } = row;\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.id)}\r\n                      role='checkbox'\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={index}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding='checkbox'>\r\n                        <Checkbox\r\n                          color='primary'\r\n                          checked={isItemSelected}\r\n                          inputProps={{\r\n                            'aria-labelledby': labelId,\r\n                          }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align='center' component='th' id={labelId}>\r\n                        {row.id}\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        {\r\n                          <TextField\r\n                            disabled={allowEdit}\r\n                            type='tel'\r\n                            sx={{ padding: '0', width: '100%' }}\r\n                            value={row.mobile}\r\n                            onChange={(e) => onFieldChange(row.id, e.target.value, 'mobile')}\r\n                            size='small'\r\n                          />\r\n                        }\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        {\r\n                          <TextField\r\n                            disabled={allowEdit}\r\n                            type='number'\r\n                            sx={{ padding: '0' }}\r\n                            value={row.diners}\r\n                            onChange={(e) => onFieldChange(row.id, e.target.value, 'diners')}\r\n                            size='small'\r\n                          />\r\n                        }\r\n                      </TableCell>\r\n                      {\r\n                        <TableCell padding='normal' align='center'>\r\n                          <Select\r\n                            renderValue={() => (tableId === -1 ? '' : tableId)}\r\n                            disabled={allowEdit}\r\n                            sx={{ padding: '0', width: '100%' }}\r\n                            size={'small'}\r\n                            value={tableId}\r\n                            onChange={(e) => {\r\n                              e.stopPropagation();\r\n                              e.preventDefault();\r\n                              updateTableStatus(e.target.value, row.id);\r\n                              onFieldChange(row.id, e.target.value, 'tableId');\r\n                            }}\r\n                          >\r\n                            <MenuItem value={''}>\r\n                              <em>None</em>\r\n                            </MenuItem>\r\n                            {tables\r\n                              .filter((t) => t.orderId === -1 && Number(t.size) === Number(row.diners))\r\n                              .map((t) => (\r\n                                <MenuItem key={t.id} value={t.id}>\r\n                                  <em>\r\n                                    Table ID {t.id}/{t.size}\r\n                                  </em>\r\n                                </MenuItem>\r\n                              ))}\r\n                          </Select>\r\n                        </TableCell>\r\n                      }\r\n                      <TableCell>\r\n                        <TimePicker\r\n                          disabled={allowEdit}\r\n                          value={startTime}\r\n                          onChange={(value) => onFieldChange(row.id, value, 'startTime')}\r\n                          renderInput={(params) => <TextField size='small' {...params} />}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <TimePicker\r\n                          disabled={allowEdit}\r\n                          value={endTime}\r\n                          onChange={(value) => onFieldChange(row.id, value, 'endTime')}\r\n                          renderInput={(params) => <TextField size='small' {...params} />}\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow\r\n                  style={{\r\n                    height: 33 * emptyRows,\r\n                  }}\r\n                >\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component='div'\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n","import { useContext, useState } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport RestaurantContext from '../../store/restaurant-context';\r\nimport { List, ListItem, ListItemText, Popover, ListItemButton, ListItemIcon, Typography } from '@mui/material';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body1,\r\n  textAlign: 'center',\r\n  color: 'white',\r\n  height: '10vh',\r\n  fontSize: '1.3vh',\r\n  borderRadius: '30px',\r\n  boxSizing: 'border-box',\r\n}));\r\n\r\nexport default function RestaurantGrid() {\r\n  const { tables = [], updateTableStatus, updateOrder } = useContext(RestaurantContext);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [tableId, setTableId] = useState(null);\r\n  const [orderId, setOrderId] = useState(null);\r\n\r\n  const handleClick = (event, id, orderId) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setTableId(id);\r\n    setOrderId(orderId);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const releaseTable = () => {\r\n    setAnchorEl(null);\r\n    updateTableStatus(tableId, -1);\r\n    updateOrder({\r\n      id: orderId,\r\n      tableId: -1,\r\n    });\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const idPopover = open ? 'simple-popover' : undefined;\r\n  return (\r\n    <Grid p={3} container rowSpacing={3} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n      {tables.map(({ id, size, orderId }, _index) => {\r\n        return (\r\n          <Grid item xs={size + 1} key={id}>\r\n            <Paper sx={{ background: 'brown' }} elevation={24}>\r\n              <Item\r\n                onClick={(e) => {\r\n                  handleClick(e, id, orderId);\r\n                }}\r\n                sx={{ background: `${orderId !== -1 ? 'red' : 'green'}` }}\r\n              >\r\n                <Typography>ID:{id}</Typography>\r\n                <Typography sx={{ fontSize: '1.7vh', fontWeight: 500 }}>SIZE:{size}</Typography>\r\n                {orderId !== -1 && (\r\n                  <Typography sx={{ fontSize: '1.7vh', fontWeight: 500 }}>ORDER ID:{orderId}</Typography>\r\n                )}\r\n              </Item>\r\n            </Paper>\r\n            <Popover\r\n              elevation={0}\r\n              id={idPopover}\r\n              open={open}\r\n              anchorEl={anchorEl}\r\n              onClose={handleClose}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }}\r\n            >\r\n              <List>\r\n                <ListItem disablePadding>\r\n                  <ListItemButton onClick={releaseTable}>\r\n                    <ListItemIcon>\r\n                      <ClearIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary='Release table' />\r\n                  </ListItemButton>\r\n                </ListItem>\r\n              </List>\r\n            </Popover>\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n}\r\n","export const DELETE_ORDER = 'DELETE_ORDER';\r\nexport const UPDATE_ORDER = 'UPDATE_ORDER';\r\nexport const UPDATE_TABLE_STATUS = 'UPDATE_TABLE_STATUS';\r\nexport const RELEASE_STATUS = 'UPDATE_TABLE_STATUS';\r\nexport const ADD_NEW_ORDER = 'ADD_NEW_ORDER';\r\n\r\nconst addOrder = (payload, state) => {\r\n  const { order } = payload;\r\n  return {\r\n    ...state,\r\n    ordersQueue: [...state.ordersQueue, order],\r\n  };\r\n};\r\n\r\nconst updateOrder = (payload, state) => {\r\n  const { order } = payload;\r\n  console.log(order);\r\n  return {\r\n    ...state,\r\n    ordersQueue: state.ordersQueue.map((o) => {\r\n      return o.id === order.id\r\n        ? {\r\n            ...o,\r\n            ...order,\r\n          }\r\n        : o;\r\n    }),\r\n  };\r\n};\r\n\r\nconst deleteOrder = (payload, state) => {\r\n  return {\r\n    ...state,\r\n    ordersQueue: state.ordersQueue.filter((o) => !payload.orderIds.includes(o.id)),\r\n  };\r\n};\r\n\r\nconst updateTableStatus = (payload, state) => {\r\n  if (Array.isArray(payload.tableId)) {\r\n    return {\r\n      ...state,\r\n      tables: state.tables.map((t) => {\r\n        return payload.tableId.includes(t.id) ? { ...t, orderId: payload.orderId } : { ...t };\r\n      }),\r\n    };\r\n  }\r\n  return {\r\n    ...state,\r\n    tables: state.tables.map((t) => {\r\n      if (payload.tableId === t.id) {\r\n        return {\r\n          ...t,\r\n          orderId: payload.orderId,\r\n        };\r\n      }\r\n      if (payload.orderId === t.orderId) {\r\n        return {\r\n          ...t,\r\n          orderId: -1,\r\n        };\r\n      }\r\n      return {\r\n        ...t,\r\n      };\r\n    }),\r\n  };\r\n};\r\n\r\nexport const restaurantReducer = (state, payload) => {\r\n  switch (payload.type) {\r\n    case DELETE_ORDER:\r\n      return deleteOrder(payload, state);\r\n    case UPDATE_ORDER:\r\n      return updateOrder(payload, state);\r\n    case UPDATE_TABLE_STATUS:\r\n      return updateTableStatus(payload, state);\r\n    case ADD_NEW_ORDER:\r\n      return addOrder(payload, state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\nimport ordersQueue from './data/orders.json';\nimport tables from './data/tables.json';\n\nimport RestaurantContext from './restaurant-context';\nimport {\n  restaurantReducer,\n  ADD_NEW_ORDER,\n  DELETE_ORDER,\n  UPDATE_ORDER,\n  UPDATE_TABLE_STATUS,\n} from './restuarant-reducer';\n\nconst RestaurantProvider = (props) => {\n  const [restaurantState, dispatch] = useReducer(restaurantReducer, {\n    ordersQueue,\n    tables,\n  });\n\n  const updateTableStatus = (tableId, orderId = -1) => {\n    dispatch({ type: UPDATE_TABLE_STATUS, tableId, orderId });\n  };\n\n  const deleteOrder = (orderIds = []) => {\n    dispatch({ type: DELETE_ORDER, orderIds });\n  };\n\n  const updateOrder = (order) => {\n    dispatch({ type: UPDATE_ORDER, order });\n  };\n\n  const addOrder = (order) => {\n    dispatch({ type: ADD_NEW_ORDER, order });\n  };\n\n  return (\n    <RestaurantContext.Provider\n      value={{\n        updateTableStatus,\n        deleteOrder,\n        updateOrder,\n        addOrder,\n        ...restaurantState,\n      }}\n    >\n      {props.children}\n    </RestaurantContext.Provider>\n  );\n};\n\nexport default RestaurantProvider;\n","import React, { useMemo, useContext } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport { Typography } from '@mui/material';\r\nimport RestaurantContext from '../../store/restaurant-context';\r\n\r\nconst Leadgen = () => {\r\n  const { tables = [] } = useContext(RestaurantContext);\r\n  const availableTables = useMemo(() => tables.filter((t) => t.orderId === -1).length, [tables]);\r\n  const takenTables = useMemo(() => tables.length - availableTables, [availableTables, tables]);\r\n  return (\r\n    <Box padding={0} sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }} component='div'>\r\n      <Box m={1}>\r\n        <Typography sx={{ color: 'green', fontWeight: 700, lineHeight: '3vh', fontSize: '2vh' }}>\r\n          AVAILABLE TABLES: ({availableTables})\r\n        </Typography>\r\n      </Box>\r\n      <Box m={1}>\r\n        <Typography sx={{ color: 'red', fontWeight: 700, lineHeight: '3vh', fontSize: '2vh' }}>TAKEN TABLES: ({takenTables})</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Leadgen;\r\n","import { createContext, useContext, useState, useMemo } from 'react';\r\nimport { useTheme, ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\r\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\r\nimport { IconButton, Paper } from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport EnhancedTable from './components/enhanced-table/enhanced-table';\r\nimport RestaurantGrid from './components/restaurant-grid/restaurant-grid';\r\nimport RestaurantProvider from './store/restaurant-provider';\r\nimport Leadgen from './components/leadgen/leadgen';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\n\r\n\r\n\r\nconst ColorModeContext = createContext({ toggleColorMode: () => {} });\r\n\r\nfunction App() {\r\n  const theme = useTheme();\r\n  const colorMode = useContext(ColorModeContext);\r\n\r\n  return (\r\n    <RestaurantProvider>\r\n      <Box sx={{ width: '100vw', height: '100vh' }}>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            width: '100%',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-start',\r\n            bgcolor: 'background.default',\r\n            color: 'text.primary',\r\n            p: 3,\r\n          }}\r\n        >\r\n          {theme.palette.mode} mode\r\n          <IconButton sx={{ ml: 1 }} onClick={colorMode.toggleColorMode} color='inherit'>\r\n            {theme.palette.mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\r\n          </IconButton>\r\n        </Box>\r\n        <Box\r\n          component='div'\r\n          sx={{\r\n            bgcolor: 'background.default',\r\n            flexDirection: 'column',\r\n            display: 'flex',\r\n            padding: '50px',\r\n            boxSizing: 'border-box',\r\n          }}\r\n        >\r\n          <Box component='div' sx={{ boxSizing: 'border-box', height: 'fit-content' }}>\r\n            <EnhancedTable />\r\n          </Box>\r\n\r\n          <Box mb={2} component='div' sx={{ boxSizing: 'border-box', height: 'fit-content' }}>\r\n            <Paper>\r\n              <Leadgen />\r\n            </Paper>\r\n          </Box>\r\n          <Paper elevation={10}>\r\n            <RestaurantGrid numberOfTables={17} />\r\n          </Paper>\r\n        </Box>\r\n      </Box>\r\n    </RestaurantProvider>\r\n  );\r\n}\r\n\r\nfunction AppContextWrapper() {\r\n  const [mode, setMode] = useState('light');\r\n  const colorMode = useMemo(\r\n    () => ({\r\n      toggleColorMode: () => {\r\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  const theme = useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          mode,\r\n        },\r\n      }),\r\n    [mode]\r\n  );\r\n\r\n  return (\r\n    <ColorModeContext.Provider value={colorMode}>\r\n      <ThemeProvider theme={theme}>\r\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n          <App />\r\n        </LocalizationProvider>\r\n      </ThemeProvider>\r\n    </ColorModeContext.Provider>\r\n  );\r\n}\r\n\r\nexport default AppContextWrapper;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CssBaseline } from '@mui/material';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}