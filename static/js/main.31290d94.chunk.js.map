{"version":3,"sources":["store/restaurant-context.js","components/enhanced-table/table-model.jsx","components/enhanced-table/table-head/table-head.jsx","components/enhanced-table/helpers/sorts.js","components/enhanced-table/enhanced-table-toolbar/enhanced-table-toolbar.jsx","components/enhanced-table/enhanced-table.jsx","components/restaurant-grid/restaurant-grid.jsx","store/restuarant-reducer.js","store/restaurant-provider.jsx","components/leadgen/leadgen.jsx","App.js","reportWebVitals.js","index.js"],"names":["RestaurantContext","React","createContext","ordersQueue","tables","updateTableStatus","deleteOrder","updateOrder","headCells","id","label","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","sx","background","height","TableRow","TableCell","padding","Checkbox","color","indeterminate","checked","onChange","inputProps","map","headCell","index","align","sortDirection","TableSortLabel","fontSize","active","direction","onClick","property","event","Box","component","visuallyHidden","descendingComparator","a","b","getComparator","stableSort","array","comparator","stabilizedThis","el","sort","EnhancedTableToolbar","Toolbar","pl","sm","pr","xs","bgcolor","theme","alpha","palette","primary","main","action","activatedOpacity","Typography","flex","variant","Tooltip","title","IconButton","EnhancedTable","useContext","rows","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","setTimeChange","rowId","value","field","Number","emptyRows","Math","max","length","width","Paper","mb","TableContainer","Table","size","target","console","log","newSelecteds","n","_event","TableBody","slice","row","isItemSelected","indexOf","labelId","tableId","find","t","orderId","startTime","endTime","hover","preventDefault","stopPropagation","type","selectedIndex","newSelected","concat","handleClick","role","tabIndex","mobile","diners","TextField","select","e","filter","MenuItem","TimePicker","renderInput","params","style","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","Item","styled","typography","body1","textAlign","borderRadius","boxSizing","RestaurantGrid","anchorEl","setAnchorEl","setTableId","handleClose","releaseTable","open","Boolean","idPopover","undefined","Grid","p","container","rowSpacing","columnSpacing","md","_index","item","elevation","currentTarget","fontWeight","Popover","onClose","anchorOrigin","vertical","horizontal","List","ListItem","disablePadding","ListItemButton","ListItemIcon","ListItemText","DELETE_ORDER","UPDATE_ORDER","UPDATE_TABLE_STATUS","restaurantReducer","state","payload","o","RestaurantProvider","useReducer","restaurantState","dispatch","Provider","setTimeout","children","Leadgen","availableTables","useMemo","takenTables","display","flexDirection","alignItems","m","lineHeight","ColorModeContext","toggleColorMode","App","useTheme","colorMode","justifyContent","mode","ml","numberOfTables","AppContextWrapper","setMode","prevMode","createTheme","ThemeProvider","LocalizationProvider","dateAdapter","AdapterDateFns","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"6+FAUeA,EARWC,IAAMC,cAAc,CAC5CC,YAAa,GACbC,OAAQ,GACRC,kBAAmB,aACnBC,YAAa,aACbC,YAAa,e,2BCPTC,EAAY,CAChB,CACEC,GAAI,KACJC,MAAO,YAET,CACED,GAAI,SACJC,MAAO,UAET,CACED,GAAI,SACJC,MAAO,qBAET,CACED,GAAI,UACJC,MAAO,gBAET,CACED,GAAI,YACJC,MAAO,cAET,CACED,GAAI,UACJC,MAAO,a,OC4CIC,MAxDf,SAA2BC,GACzB,IAAQC,EAA2ED,EAA3EC,iBAAkBC,EAAyDF,EAAzDE,MAAOC,EAAkDH,EAAlDG,QAASC,EAAyCJ,EAAzCI,YAAaC,EAA4BL,EAA5BK,SAAUC,EAAkBN,EAAlBM,cAKjE,OACE,cAACC,EAAA,EAAD,CAAWC,GAAI,CAAEC,WAAY,WAAYC,OAAQ,QAAjD,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,QAAQ,WAAnB,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,UACNC,cAAeZ,EAAc,GAAKA,EAAcC,EAChDY,QAASZ,EAAW,GAAKD,IAAgBC,EACzCa,SAAUjB,EACVkB,WAAY,CACV,aAAc,2BAInBvB,EAAUwB,KAAI,SAACC,EAAUC,GAAX,OACb,cAACV,EAAA,EAAD,CAEEW,MAAM,SACNV,QAAS,SACTW,cAAerB,IAAYkB,EAASxB,IAAKK,EAJ3C,SAME,eAACuB,EAAA,EAAD,CACEjB,GAAI,CAAEkB,SAAU,SAChBC,OAAQxB,IAAYkB,EAASxB,GAC7B+B,UAAWzB,IAAYkB,EAASxB,GAAKK,EAAQ,MAC7C2B,SA7BeC,EA6BYT,EAASxB,GA7BR,SAACkC,GACvCzB,EAAcyB,EAAOD,KAwBb,UAMGT,EAASvB,MACTK,IAAYkB,EAASxB,GACpB,cAACmC,EAAA,EAAD,CAAKC,UAAU,OAAOzB,GAAI0B,IAA1B,SACa,SAAVhC,EAAmB,oBAAsB,qBAE1C,SAhBDmB,EAASxB,IApBE,IAACiC,WCb7B,SAASK,EAAqBC,EAAGC,EAAGlC,GAClC,OAAIkC,EAAElC,GAAWiC,EAAEjC,IACT,EAENkC,EAAElC,GAAWiC,EAAEjC,GACV,EAEF,EAGT,SAASmC,EAAcpC,EAAOC,GAC5B,MAAiB,SAAVD,EACH,SAACkC,EAAGC,GAAJ,OAAUF,EAAqBC,EAAGC,EAAGlC,IACrC,SAACiC,EAAGC,GAAJ,OAAWF,EAAqBC,EAAGC,EAAGlC,IAK5C,SAASoC,EAAWC,EAAOC,GACzB,IAAMC,EAAiBF,EAAMpB,KAAI,SAACuB,EAAIrB,GAAL,MAAe,CAACqB,EAAIrB,MAQrD,OAPAoB,EAAeE,MAAK,SAACR,EAAGC,GACtB,IAAMnC,EAAQuC,EAAWL,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVnC,EACKA,EAEFkC,EAAE,GAAKC,EAAE,MAEXK,EAAetB,KAAI,SAACuB,GAAD,OAAQA,EAAG,M,4FCgCxBE,MAjDf,YAAgD,IAAhBzC,EAAe,EAAfA,YAC9B,OACE,eAAC0C,EAAA,EAAD,CACEtC,GAAE,aACAuC,GAAI,CAAEC,GAAI,GACVC,GAAI,CAAEC,GAAI,EAAGF,GAAI,IACb5C,EAAc,GAAK,CACrB+C,QAAS,SAACC,GAAD,OAAWC,YAAMD,EAAME,QAAQC,QAAQC,KAAMJ,EAAME,QAAQG,OAAOC,qBALjF,UASGtD,EAAc,EACb,eAACuD,EAAA,EAAD,CAAYnD,GAAI,CAAEoD,KAAM,YAAc7C,MAAM,UAAU8C,QAAQ,YAAY5B,UAAU,MAApF,UACG7B,EADH,eAIA,cAACuD,EAAA,EAAD,CAAYnD,GAAI,CAAEoD,KAAM,YAAcC,QAAQ,KAAKhE,GAAG,aAAaoC,UAAU,MAA7E,oBAKD7B,EAAc,EACb,qCACE,cAAC0D,EAAA,EAAD,CAASC,MAAM,UAAf,SACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,QAGJ,cAACF,EAAA,EAAD,CAASC,MAAM,QAAf,SACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,WAKN,cAACF,EAAA,EAAD,CAASC,MAAM,cAAf,SACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,Y,2BC9BG,SAASC,IACtB,MAAgFC,qBAAW9E,GAA3F,IAAQG,YAAa4E,OAArB,MAA4B,GAA5B,MAAgC3E,cAAhC,MAAyC,GAAzC,EAA6CC,EAA7C,EAA6CA,kBAAmBE,EAAhE,EAAgEA,YAChE,EAA0ByE,mBAAS,OAAnC,mBAAOlE,EAAP,KAAcmE,EAAd,KACA,EAA8BD,mBAAS,MAAvC,mBAAOjE,EAAP,KAAgBmE,EAAhB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwBJ,mBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAsCN,mBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KAmDMC,EAAgB,SAACC,EAAOC,EAAOC,GACnCrF,EAAY,aACVE,GAAIoF,OAAOH,IACVE,EAAQD,KAOPG,EAAYT,EAAO,EAAIU,KAAKC,IAAI,GAAI,EAAIX,GAAQE,EAAcR,EAAKkB,QAAU,EAEnF,OACE,cAACrD,EAAA,EAAD,CAAKxB,GAAI,CAAE8E,MAAO,QAAlB,SACE,eAACC,EAAA,EAAD,CAAO/E,GAAI,CAAE8E,MAAO,OAAQE,GAAI,GAAhC,UACE,cAAC,EAAD,CAAsBpF,YAAamE,EAASc,SAC5C,cAACI,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAO,kBAAgB,aAAaC,KAAM,QAA1C,UACE,cAAC,EAAD,CACEvF,YAAamE,EAASc,OACtBnF,MAAOA,EACPC,QAASA,EACTF,iBAjEiB,SAAC8B,GAC5B,GAAIA,EAAM6D,OAAO3E,QAAjB,CACE4E,QAAQC,IAAI/D,EAAM6D,OAAO3E,SACzB,IAAM8E,EAAe5B,EAAK/C,KAAI,SAAC4E,GAAD,OAAOA,EAAEnG,MACvC2E,EAAYuB,QAGdvB,EAAY,KA2DFlE,cAxEc,SAAC2F,EAAQnE,GAEjCuC,EADclE,IAAY2B,GAAsB,QAAV5B,EACrB,OAAS,OAC1BoE,EAAWxC,IAsEDzB,SAAU8D,EAAKkB,SAEjB,eAACa,EAAA,EAAD,WACG3D,EAAW4B,EAAM7B,EAAcpC,EAAOC,IACpCgG,MAAM1B,EAAOE,EAAaF,EAAOE,EAAcA,GAC/CvD,KAAI,SAACgF,EAAK9E,GAAW,IAAD,EAtBfzB,EAuBEwG,GAvBFxG,EAuB8BuG,EAAIvG,IAvBD,IAA1B0E,EAAS+B,QAAQzG,IAwBtB0G,EAAO,kCAA8BjF,GACrCkF,EAAO,UAAGhH,EAAOiH,MAAK,SAACC,GAAD,OAAOA,EAAEC,UAAYP,EAAIvG,aAAxC,aAAG,EAA0CA,GAC1D,EAA6CuG,EAArCQ,iBAAR,MAAoB,KAApB,IAA6CR,EAAnBS,eAA1B,MAAoC,KAApC,EACA,OACE,eAAClG,EAAA,EAAD,CACEmG,OAAK,EACLjF,QAAS,SAACE,GAAD,OAtET,SAACA,EAAOlC,GAI1B,GAHAkC,EAAMgF,iBACNhF,EAAMiF,kBAEoB,aAAtBjF,EAAM6D,OAAOqB,KAAqB,CACpCpB,QAAQC,IAAI/D,EAAM6D,QAElB,IAAMsB,EAAgB3C,EAAS+B,QAAQzG,GACnCsH,EAAc,IAEK,IAAnBD,EACFC,EAAcA,EAAYC,OAAO7C,EAAU1E,GAChB,IAAlBqH,EACTC,EAAcA,EAAYC,OAAO7C,EAAS4B,MAAM,IACvCe,IAAkB3C,EAASc,OAAS,EAC7C8B,EAAcA,EAAYC,OAAO7C,EAAS4B,MAAM,GAAI,IAC3Ce,EAAgB,IACzBC,EAAcA,EAAYC,OAAO7C,EAAS4B,MAAM,EAAGe,GAAgB3C,EAAS4B,MAAMe,EAAgB,KAGpG1C,EAAY2C,IAkDwBE,CAAYtF,EAAOqE,EAAIvG,KAC3CyH,KAAK,WACL,eAAcjB,EACdkB,UAAW,EAEXhD,SAAU8B,EAPZ,UASE,cAACzF,EAAA,EAAD,CAAWC,QAAQ,WAAnB,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,UACNE,QAASoF,EACTlF,WAAY,CACV,kBAAmBoF,OAIzB,cAAC3F,EAAA,EAAD,CAAWW,MAAM,SAASU,UAAU,KAAKpC,GAAI0G,EAA7C,SACGH,EAAIvG,KAEP,cAACe,EAAA,EAAD,CAAWW,MAAM,SAAjB,SAA2B6E,EAAIoB,SAC/B,cAAC5G,EAAA,EAAD,CAAWW,MAAM,SAAjB,SAA2B6E,EAAIqB,SAC9BjB,EACC,cAAC5F,EAAA,EAAD,CAAWW,MAAM,SAAjB,SAA2BiF,IAE3B,cAAC5F,EAAA,EAAD,CAAWC,QAAQ,SAASU,MAAM,SAAlC,SACE,cAACmG,EAAA,EAAD,CACElH,GAAI,CAAEK,QAAS,IAAKyE,MAAO,QAC3BzF,GAAG,wBACH8H,QAAM,EACN5C,OAAQ,EACR7D,SAAU,SAAC0G,GACTA,EAAEZ,kBACFY,EAAEb,iBACFtH,EAAkBmI,EAAEhC,OAAOb,MAAOqB,EAAIvG,KAExC8F,KAAK,QAVP,SAYGnG,EACEqI,QAAO,SAACnB,GAAD,OAAqB,IAAdA,EAAEC,SAAqBD,EAAEf,OAASS,EAAIqB,UACpDrG,KAAI,SAACsF,GAAD,OACH,cAACoB,EAAA,EAAD,CAAqB/C,MAAO2B,EAAE7G,GAA9B,SACE,eAAC8D,EAAA,EAAD,CAAYnD,GAAI,CAAEkB,SAAU,SAA5B,sBACYgF,EAAE7G,GADd,IACmB6G,EAAEf,SAFRe,EAAE7G,WAS3B,cAACe,EAAA,EAAD,UACE,cAACmH,EAAA,EAAD,CACEhD,MAAO6B,EACP1F,SAAU,SAAC6D,GAAD,OAAWF,EAAcuB,EAAIvG,GAAIkF,EAAO,cAClDiD,YAAa,SAACC,GAAD,OAAY,cAACP,EAAA,EAAD,aAAW/B,KAAK,SAAYsC,SAGzD,cAACrH,EAAA,EAAD,UACE,cAACmH,EAAA,EAAD,CACEhD,MAAO8B,EACP3F,SAAU,SAAC6D,GAAD,OAAWF,EAAcuB,EAAIvG,GAAIkF,EAAO,YAClDiD,YAAa,SAACC,GAAD,OAAY,cAACP,EAAA,EAAD,aAAW/B,KAAK,SAAYsC,WAxDpD7B,EAAIvG,OA8DhBqF,EAAY,GACX,cAACvE,EAAA,EAAD,CACEuH,MAAO,CACLxH,OAAQ,GAAKwE,GAFjB,SAKE,cAACtE,EAAA,EAAD,CAAWuH,QAAS,cAM9B,cAACC,EAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BpG,UAAU,MACVqG,MAAOnE,EAAKkB,OACZV,YAAaA,EACbF,KAAMA,EACN8D,aAlIiB,SAACtC,EAAQuC,GAChC9D,EAAQ8D,IAkIFC,oBA/HwB,SAAC1G,GAC/B6C,EAAe8D,SAAS3G,EAAM6D,OAAOb,MAAO,KAC5CL,EAAQ,W,sGChENiE,GAAOC,YAAOrD,IAAPqD,EAAc,gBAAGxF,EAAH,EAAGA,MAAH,mBAAC,eACvBA,EAAMyF,WAAWC,OADK,IAEzBC,UAAW,SACXhI,MAAO,QACPL,OAAQ,OACRgB,SAAU,QACVsH,aAAc,OACdC,UAAW,kBAGE,SAASC,KACtB,MAA2ChF,qBAAW9E,GAAtD,IAAQI,cAAR,MAAiB,GAAjB,EAAqBC,EAArB,EAAqBA,kBACrB,EAAgC2E,mBAAS,MAAzC,mBAAO+E,EAAP,KAAiBC,EAAjB,KACA,EAA8BhF,mBAAS,MAAvC,mBAAOoC,EAAP,KAAgB6C,EAAhB,KAOMC,EAAc,WAClBF,EAAY,OAGRG,EAAe,WACnBH,EAAY,MACZ3J,EAAkB+G,GAAS,IAGvBgD,EAAOC,QAAQN,GACfO,EAAYF,EAAO,sBAAmBG,EAC5C,OACE,cAACC,GAAA,EAAD,CAAMC,EAAG,EAAGC,WAAS,EAACC,WAAY,EAAGC,cAAe,CAAE9G,GAAI,EAAGF,GAAI,EAAGiH,GAAI,GAAxE,SACGzK,EAAO4B,KAAI,WAAwB8I,GAAY,IAAjCrK,EAAgC,EAAhCA,GAAI8F,EAA4B,EAA5BA,KAAMgB,EAAsB,EAAtBA,QACvB,OACE,eAACiD,GAAA,EAAD,CAAMO,MAAI,EAACjH,GAAIyC,EAAO,EAAtB,UACE,cAACJ,EAAA,EAAD,CAAO/E,GAAI,CAAEC,WAAY,SAAW2J,UAAW,GAA/C,SACE,eAACzB,GAAD,CACE9G,QAAS,SAAC+F,IAvBJ,SAAC7F,EAAOlC,GAC1BuJ,EAAYrH,EAAMsI,eAClBhB,EAAWxJ,GAsBGwH,CAAYO,EAAG/H,IAEjBW,GAAI,CAAEC,WAAW,GAAD,OAAKkG,GAAuB,IAAZA,EAAgB,MAAQ,UAJ1D,UAME,eAAChD,EAAA,EAAD,iBAAgB9D,KAChB,eAAC8D,EAAA,EAAD,CAAYnD,GAAI,CAAEkB,SAAU,QAAS4I,WAAY,KAAjD,kBAA8D3E,MAC5DgB,GAAuB,IAAZA,IACX,eAAChD,EAAA,EAAD,CAAYnD,GAAI,CAAEkB,SAAU,QAAS4I,WAAY,KAAjD,sBAAkE3D,UAIxE,cAAC4D,GAAA,EAAD,CACEH,UAAW,EACXvK,GAAI6J,EACJF,KAAMA,EACNL,SAAUA,EACVqB,QAASlB,EACTmB,aAAc,CACZC,SAAU,MACVC,WAAY,QARhB,SAWE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAUC,gBAAc,EAAxB,SACE,eAACC,GAAA,EAAD,CAAgBlJ,QAAS0H,EAAzB,UACE,cAACyB,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACC,GAAA,EAAD,CAAc1H,QAAQ,6BAhCF1D,Q,wBC1C3BqL,GAAe,eACfC,GAAe,eACfC,GAAsB,sBAkCtBC,GAAoB,SAACC,EAAOC,GACvC,OAAQA,EAAQtE,MACd,KAAKiE,GACH,OACF,KAAKC,GACH,OApCc,SAACI,EAASD,GAC5B,IAAQpL,EAAUqL,EAAVrL,MACR,OAAO,2BACFoL,GADL,IAEE/L,YAAa+L,EAAM/L,YAAY6B,KAAI,SAACoK,GAClC,OAAOA,EAAE3L,KAAOK,EAAML,GAAf,2BAEE2L,GACAtL,GAELsL,OA0BG7L,CAAY4L,EAASD,GAC9B,KAAKF,GACH,OArBoB,SAACG,EAASD,GAClC,OAAO,2BACFA,GADL,IAEE9L,OAAQ8L,EAAM9L,OAAO4B,KAAI,SAACsF,GACxB,OAAO6E,EAAQ/E,UAAYE,EAAE7G,GAAtB,2BAEE6G,GAFF,IAGDC,QAAS4E,EAAQ5E,UAEnBD,OAYGjH,CAAkB8L,EAASD,GACpC,QACE,OAAOA,ICFEG,GApCY,SAACzL,GAC1B,MAAoC0L,qBAAWL,GAAmB,CAChE9L,eACAC,YAFF,mBAAOmM,EAAP,KAAwBC,EAAxB,KAqBA,OACE,cAAC,EAAkBC,SAAnB,CACE9G,MAAK,aACHtF,kBAnBoB,SAAC+G,EAASG,GAClCiF,EAAS,CAAE3E,KAAMmE,GAAqB5E,UAASG,aAmB3CjH,YAhBc,SAACiH,GACnBmF,YAAW,WACTF,EAAS,CAAE3E,KAAMiE,GAAcvE,cAC9B,MAcChH,YAXc,SAACO,GACnB4L,YAAW,WACTF,EAAS,CAAE3E,KAAMkE,GAAcjL,YAC9B,OASIyL,GALP,SAQG3L,EAAM+L,YCfEC,GAlBC,WACd,MAAwB9H,qBAAW9E,GAA3BI,cAAR,MAAiB,GAAjB,EACMyM,EAAkBC,mBAAQ,kBAAM1M,EAAOqI,QAAO,SAACnB,GAAD,OAAqB,IAAdA,EAAEC,WAAmBtB,SAAQ,CAAC7F,IACnF2M,EAAcD,mBAAQ,kBAAM1M,EAAO6F,OAAS4G,IAAiB,CAACA,EAAiBzM,IACrF,OACE,eAACwC,EAAA,EAAD,CAAKnB,QAAS,EAAGL,GAAI,CAAE4L,QAAS,OAAQC,cAAe,SAAUC,WAAY,cAAgBrK,UAAU,MAAvG,UACE,cAACD,EAAA,EAAD,CAAKuK,EAAG,EAAR,SACE,eAAC5I,EAAA,EAAD,CAAYnD,GAAI,CAAEO,MAAO,QAASuJ,WAAY,IAAKkC,WAAY,MAAO9K,SAAU,OAAhF,gCACsBuK,EADtB,SAIF,cAACjK,EAAA,EAAD,CAAKuK,EAAG,EAAR,SACE,eAAC5I,EAAA,EAAD,CAAYnD,GAAI,CAAEO,MAAO,MAAOuJ,WAAY,IAAKkC,WAAY,MAAO9K,SAAU,OAA9E,4BAAuGyK,EAAvG,a,oBCFFM,GAAmBnN,wBAAc,CAAEoN,gBAAiB,eAE1D,SAASC,KACP,IAAMvJ,EAAQwJ,cACRC,EAAY3I,qBAAWuI,IAE7B,OACE,cAAC,GAAD,UACE,eAACzK,EAAA,EAAD,CAAKxB,GAAI,CAAE8E,MAAO,QAAS5E,OAAQ,SAAnC,UACE,eAACsB,EAAA,EAAD,CACExB,GAAI,CACF4L,QAAS,OACT9G,MAAO,OACPgH,WAAY,SACZQ,eAAgB,aAChB3J,QAAS,qBACTpC,MAAO,eACP8I,EAAG,GARP,UAWGzG,EAAME,QAAQyJ,KAXjB,QAYE,cAAC/I,EAAA,EAAD,CAAYxD,GAAI,CAAEwM,GAAI,GAAKnL,QAASgL,EAAUH,gBAAiB3L,MAAM,UAArE,SAC0B,SAAvBqC,EAAME,QAAQyJ,KAAkB,cAAC,IAAD,IAAsB,cAAC,IAAD,SAG3D,eAAC/K,EAAA,EAAD,CACEC,UAAU,MACVzB,GAAI,CACF2C,QAAS,qBACTkJ,cAAe,SACfD,QAAS,OACTvL,QAAS,OACToI,UAAW,cAPf,UAUE,cAACjH,EAAA,EAAD,CAAKC,UAAU,MAAMzB,GAAI,CAAEyI,UAAW,aAAcvI,OAAQ,eAA5D,SACE,cAACuD,EAAD,MAGF,cAACjC,EAAA,EAAD,CAAKwD,GAAI,EAAGvD,UAAU,MAAMzB,GAAI,CAAEyI,UAAW,aAAcvI,OAAQ,eAAnE,SACE,cAAC6E,EAAA,EAAD,UACE,cAAC,GAAD,QAGJ,cAACA,EAAA,EAAD,CAAO6E,UAAW,GAAlB,SACE,cAAClB,GAAD,CAAgB+D,eAAgB,eAwC7BC,OAhCf,WACE,MAAwB9I,mBAAS,SAAjC,mBAAO2I,EAAP,KAAaI,EAAb,KACMN,EAAYX,mBAChB,iBAAO,CACLQ,gBAAiB,WACfS,GAAQ,SAACC,GAAD,MAA4B,UAAbA,EAAuB,OAAS,eAG3D,IAGIhK,EAAQ8I,mBACZ,kBACEmB,YAAY,CACV/J,QAAS,CACPyJ,YAGN,CAACA,IAGH,OACE,cAACN,GAAiBZ,SAAlB,CAA2B9G,MAAO8H,EAAlC,SACE,cAACS,EAAA,EAAD,CAAelK,MAAOA,EAAtB,SACE,cAACmK,GAAA,EAAD,CAAsBC,YAAaC,KAAnC,SACE,cAACd,GAAD,WCjFKe,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAACC,EAAA,EAAD,IACA,cAAC,GAAD,OAEFC,SAASC,eAAe,SAM1Bd,O","file":"static/js/main.31290d94.chunk.js","sourcesContent":["import React from 'react';\n\nconst RestaurantContext = React.createContext({\n  ordersQueue: [],\n  tables: [],\n  updateTableStatus: () => {},\n  deleteOrder: () => {},\n  updateOrder: () => {},\n});\n\nexport default RestaurantContext;\n","const headCells = [\n  {\n    id: 'id',\n    label: 'GUEST ID',\n  },\n  {\n    id: 'mobile',\n    label: 'MOBILE',\n  },\n  {\n    id: 'diners',\n    label: 'NUMBER OF DINNERS',\n  },\n  {\n    id: 'tableId',\n    label: 'TABLE NUMBER',\n  },\n  {\n    id: 'startTime',\n    label: 'Start Time',\n  },\n  {\n    id: 'endTime',\n    label: 'End Time',\n  }\n];\n\nexport { headCells };\n","import TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport TableCell from '@mui/material/TableCell';\nimport { visuallyHidden } from '@mui/utils';\nimport Box from '@mui/material/Box';\n\nimport PropTypes from 'prop-types';\nimport { headCells } from '../table-model';\n\nfunction EnhancedTableHead(props) {\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead sx={{ background: 'darkGray', height: '30px' }}>\n      <TableRow>\n        <TableCell padding='checkbox'>\n          <Checkbox\n            color='primary'\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              'aria-label': 'select all desserts',\n            }}\n          />\n        </TableCell>\n        {headCells.map((headCell, index) => (\n          <TableCell\n            key={headCell.id}\n            align='center'\n            padding={'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              sx={{ fontSize: '1.5vh' }}\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component='span' sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;\n","function descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport { getComparator, stableSort };\n","import PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport BackspaceOutlinedIcon from '@mui/icons-material/BackspaceOutlined';\nimport FilterListIcon from '@mui/icons-material/FilterList';\n\nfunction EnhancedTableToolbar({ numSelected }) {\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) => alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\n        }),\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography sx={{ flex: '1 1 100%' }} color='inherit' variant='subtitle1' component='div'>\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography sx={{ flex: '1 1 100%' }} variant='h6' id='tableTitle' component='div'>\n          Orders\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <>\n          <Tooltip title='Confirm'>\n            <IconButton>\n              <ThumbUpIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title='Clear'>\n            <IconButton>\n              <BackspaceOutlinedIcon />\n            </IconButton>\n          </Tooltip>\n        </>\n      ) : (\n        <Tooltip title='Filter list'>\n          <IconButton>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableToolbar;\n","import { useState, useContext } from 'react';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Checkbox from '@mui/material/Checkbox';\nimport RestaurantContext from '../../store/restaurant-context';\nimport EnhancedTableHead from './table-head/table-head';\nimport { getComparator, stableSort } from './helpers/sorts';\nimport EnhancedTableToolbar from './enhanced-table-toolbar/enhanced-table-toolbar';\nimport { MenuItem, TextField, Typography } from '@mui/material';\nimport { TimePicker } from '@mui/lab';\n\nexport default function EnhancedTable() {\n  const { ordersQueue: rows = [], tables = [], updateTableStatus, updateOrder } = useContext(RestaurantContext);\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('id');\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (_event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      console.log(event.target.checked);\n      const newSelecteds = rows.map((n) => n.id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, id) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (event.target.type === 'checkbox') {\n      console.log(event.target);\n\n      const selectedIndex = selected.indexOf(id);\n      let newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      }\n\n      setSelected(newSelected);\n    }\n  };\n\n  const handleChangePage = (_event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const setTimeChange = (rowId, value, field) => {\n    updateOrder({\n      id: Number(rowId),\n      [field]: value,\n    });\n  };\n\n  const isSelected = (id) => selected.indexOf(id) !== -1;\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Paper sx={{ width: '100%', mb: 2 }}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table aria-labelledby='tableTitle' size={'small'}>\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  const tableId = tables.find((t) => t.orderId === row.id)?.id;\n                  const { startTime = null, endTime = null } = row;\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.id)}\n                      role='checkbox'\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.id}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding='checkbox'>\n                        <Checkbox\n                          color='primary'\n                          checked={isItemSelected}\n                          inputProps={{\n                            'aria-labelledby': labelId,\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell align='center' component='th' id={labelId}>\n                        {row.id}\n                      </TableCell>\n                      <TableCell align='center'>{row.mobile}</TableCell>\n                      <TableCell align='center'>{row.diners}</TableCell>\n                      {tableId ? (\n                        <TableCell align='center'>{tableId}</TableCell>\n                      ) : (\n                        <TableCell padding='normal' align='center'>\n                          <TextField\n                            sx={{ padding: '0', width: '100%' }}\n                            id='outlined-select-table'\n                            select\n                            value={-1}\n                            onChange={(e) => {\n                              e.stopPropagation();\n                              e.preventDefault();\n                              updateTableStatus(e.target.value, row.id);\n                            }}\n                            size='small'\n                          >\n                            {tables\n                              .filter((t) => t.orderId === false && t.size === row.diners)\n                              .map((t) => (\n                                <MenuItem key={t.id} value={t.id}>\n                                  <Typography sx={{ fontSize: '1.6vh' }}>\n                                    Table ID {t.id}/{t.size}\n                                  </Typography>\n                                </MenuItem>\n                              ))}\n                          </TextField>\n                        </TableCell>\n                      )}\n                      <TableCell>\n                        <TimePicker\n                          value={startTime}\n                          onChange={(value) => setTimeChange(row.id, value, 'startTime')}\n                          renderInput={(params) => <TextField size='small' {...params} />}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <TimePicker\n                          value={endTime}\n                          onChange={(value) => setTimeChange(row.id, value, 'endTime')}\n                          renderInput={(params) => <TextField size='small' {...params} />}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: 33 * emptyRows,\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component='div'\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </Box>\n  );\n}\n","import { useContext, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport RestaurantContext from '../../store/restaurant-context';\nimport { List, ListItem, ListItemText, Popover, ListItemButton, ListItemIcon, Typography } from '@mui/material';\nimport ClearIcon from '@mui/icons-material/Clear';\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body1,\n  textAlign: 'center',\n  color: 'white',\n  height: '10vh',\n  fontSize: '1.3vh',\n  borderRadius: '30px',\n  boxSizing: 'border-box',\n}));\n\nexport default function RestaurantGrid() {\n  const { tables = [], updateTableStatus } = useContext(RestaurantContext);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [tableId, setTableId] = useState(null);\n\n  const handleClick = (event, id) => {\n    setAnchorEl(event.currentTarget);\n    setTableId(id);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const releaseTable = () => {\n    setAnchorEl(null);\n    updateTableStatus(tableId, false);\n  };\n\n  const open = Boolean(anchorEl);\n  const idPopover = open ? 'simple-popover' : undefined;\n  return (\n    <Grid p={3} container rowSpacing={3} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n      {tables.map(({ id, size, orderId }, _index) => {\n        return (\n          <Grid item xs={size + 1} key={id}>\n            <Paper sx={{ background: 'brown' }} elevation={24}>\n              <Item\n                onClick={(e) => {\n                  handleClick(e, id);\n                }}\n                sx={{ background: `${orderId || orderId === 0 ? 'red' : 'green'}` }}\n              >\n                <Typography>ID:{id}</Typography>\n                <Typography sx={{ fontSize: '1.7vh', fontWeight: 500 }}>SIZE:{size}</Typography>\n                {(orderId || orderId === 0) && (\n                  <Typography sx={{ fontSize: '1.7vh', fontWeight: 500 }}>ORDER ID:{orderId}</Typography>\n                )}\n              </Item>\n            </Paper>\n            <Popover\n              elevation={0}\n              id={idPopover}\n              open={open}\n              anchorEl={anchorEl}\n              onClose={handleClose}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n            >\n              <List>\n                <ListItem disablePadding>\n                  <ListItemButton onClick={releaseTable}>\n                    <ListItemIcon>\n                      <ClearIcon />\n                    </ListItemIcon>\n                    <ListItemText primary='Release table' />\n                  </ListItemButton>\n                </ListItem>\n              </List>\n            </Popover>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n}\n","export const DELETE_ORDER = 'DELETE_ORDER';\nexport const UPDATE_ORDER = 'UPDATE_ORDER';\nexport const UPDATE_TABLE_STATUS = 'UPDATE_TABLE_STATUS';\nexport const RELEASE_STATUS = 'UPDATE_TABLE_STATUS';\n\nconst updateOrder = (payload, state) => {\n  const { order } = payload;\n  return {\n    ...state,\n    ordersQueue: state.ordersQueue.map((o) => {\n      return o.id === order.id\n        ? {\n            ...o,\n            ...order,\n          }\n        : o;\n    }),\n  };\n};\n\nconst removeOrder = (payload, state) => {};\n\nconst updateTableStatus = (payload, state) => {\n  return {\n    ...state,\n    tables: state.tables.map((t) => {\n      return payload.tableId === t.id\n        ? {\n            ...t,\n            orderId: payload.orderId,\n          }\n        : t;\n    }),\n  };\n};\n\nexport const restaurantReducer = (state, payload) => {\n  switch (payload.type) {\n    case DELETE_ORDER:\n      return removeOrder(payload, state);\n    case UPDATE_ORDER:\n      return updateOrder(payload, state);\n    case UPDATE_TABLE_STATUS:\n      return updateTableStatus(payload, state);\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from 'react';\nimport ordersQueue from './data/orders.json';\nimport tables from './data/tables.json';\n\nimport RestaurantContext from './restaurant-context';\nimport { restaurantReducer, DELETE_ORDER, UPDATE_ORDER, UPDATE_TABLE_STATUS } from './restuarant-reducer';\n\nconst RestaurantProvider = (props) => {\n  const [restaurantState, dispatch] = useReducer(restaurantReducer, {\n    ordersQueue,\n    tables,\n  });\n\n  const updateTableStatus = (tableId, orderId) => {\n    dispatch({ type: UPDATE_TABLE_STATUS, tableId, orderId });\n  };\n\n  const deleteOrder = (orderId) => {\n    setTimeout(() => {\n      dispatch({ type: DELETE_ORDER, orderId });\n    }, 700);\n  };\n\n  const updateOrder = (order) => {\n    setTimeout(() => {\n      dispatch({ type: UPDATE_ORDER, order });\n    }, 700);\n  };\n\n  return (\n    <RestaurantContext.Provider\n      value={{\n        updateTableStatus,\n        deleteOrder,\n        updateOrder,\n        ...restaurantState,\n      }}\n    >\n      {props.children}\n    </RestaurantContext.Provider>\n  );\n};\n\nexport default RestaurantProvider;\n","import React, { useMemo, useContext } from 'react';\nimport Box from '@mui/material/Box';\nimport { Typography } from '@mui/material';\nimport RestaurantContext from '../../store/restaurant-context';\n\nconst Leadgen = () => {\n  const { tables = [] } = useContext(RestaurantContext);\n  const availableTables = useMemo(() => tables.filter((t) => t.orderId === false).length, [tables]);\n  const takenTables = useMemo(() => tables.length - availableTables, [availableTables, tables]);\n  return (\n    <Box padding={0} sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }} component='div'>\n      <Box m={1}>\n        <Typography sx={{ color: 'green', fontWeight: 700, lineHeight: '3vh', fontSize: '2vh' }}>\n          AVAILABLE TABLES: ({availableTables})\n        </Typography>\n      </Box>\n      <Box m={1}>\n        <Typography sx={{ color: 'red', fontWeight: 700, lineHeight: '3vh', fontSize: '2vh' }}>TAKEN TABLES: ({takenTables})</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Leadgen;\n","import { createContext, useContext, useState, useMemo } from 'react';\nimport { useTheme, ThemeProvider, createTheme } from '@mui/material/styles';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport { IconButton, Paper } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport EnhancedTable from './components/enhanced-table/enhanced-table';\nimport RestaurantGrid from './components/restaurant-grid/restaurant-grid';\nimport RestaurantProvider from './store/restaurant-provider';\nimport Leadgen from './components/leadgen/leadgen';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\n\n\n\nconst ColorModeContext = createContext({ toggleColorMode: () => {} });\n\nfunction App() {\n  const theme = useTheme();\n  const colorMode = useContext(ColorModeContext);\n\n  return (\n    <RestaurantProvider>\n      <Box sx={{ width: '100vw', height: '100vh' }}>\n        <Box\n          sx={{\n            display: 'flex',\n            width: '100%',\n            alignItems: 'center',\n            justifyContent: 'flex-start',\n            bgcolor: 'background.default',\n            color: 'text.primary',\n            p: 3,\n          }}\n        >\n          {theme.palette.mode} mode\n          <IconButton sx={{ ml: 1 }} onClick={colorMode.toggleColorMode} color='inherit'>\n            {theme.palette.mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n          </IconButton>\n        </Box>\n        <Box\n          component='div'\n          sx={{\n            bgcolor: 'background.default',\n            flexDirection: 'column',\n            display: 'flex',\n            padding: '50px',\n            boxSizing: 'border-box',\n          }}\n        >\n          <Box component='div' sx={{ boxSizing: 'border-box', height: 'fit-content' }}>\n            <EnhancedTable />\n          </Box>\n\n          <Box mb={2} component='div' sx={{ boxSizing: 'border-box', height: 'fit-content' }}>\n            <Paper>\n              <Leadgen />\n            </Paper>\n          </Box>\n          <Paper elevation={10}>\n            <RestaurantGrid numberOfTables={17} />\n          </Paper>\n        </Box>\n      </Box>\n    </RestaurantProvider>\n  );\n}\n\nfunction AppContextWrapper() {\n  const [mode, setMode] = useState('light');\n  const colorMode = useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n      },\n    }),\n    []\n  );\n\n  const theme = useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n        },\n      }),\n    [mode]\n  );\n\n  return (\n    <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <App />\n        </LocalizationProvider>\n      </ThemeProvider>\n    </ColorModeContext.Provider>\n  );\n}\n\nexport default AppContextWrapper;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CssBaseline } from '@mui/material';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}